extends layout

block content
  #g
      .container
          .row.centered
            div(style='  display: inline-block;')
              table.table.table-bordered.table-hover(bgcolor='white')
                tr
                  td
                    center
                      h1(style='color: black; background-color:#A9F5F2') Analizador Descendente Predictivo Recursivo
                      |                         
                      br
                      |                         
                      div(align='center')
                        h2 Entrada
                        |                            
                        textarea#INPUT(autofocus='', cols='80', rows='5', placeholder='Escriba aquí o arrastre un fichero JavaScript', style='border:dashed 2px black; background-color:#f5f5f5;color:#0000ff;')
                        |                            
                        br
                        |
                        button(type='button', onclick="dump('/examples/example1.txt');") Ejemplo 1
                        button(type='button', onclick="dump('/examples/example2.txt');") Ejemplo 2
                        button(type='button', onclick="dump('/examples/example3.txt');") Ejemplo 3
                        |                            
                        #upload
                          input#select(type='file', accept='.js')
                        |                            
                        br
                        |                            
                        h2 Salida
                        |                            
                        #cajita
                          textarea#OUTPUT(autofocus='', cols='80', rows='5', style='border:solid 1px black; background-color:#f5f5f5;color:#0000ff;')
                        |                            
                        button#PARSE(type='button')    Analizar   
                        |                         
                        br
                        br
                        |          
                        #enlaces
                          a(href='./tests', target='_blank') Tests
                          |          
                          br
                          |          
                          a(href='https://github.com/gcpmendez/Pr5_PL_1415', target='_blank') GitHub
                          |          
                          br
                          |          
                          a(href='https://travis-ci.org/', target='_blank') Travis
                        |          
                        br
                        |          
                        h2 Autores
                        |          
                        #autores
                          a(href='https://github.com/alu0100315462', target='_blank')
                            | &Aacute;lvaro Su&aacute;rez Chausson
                            // Jonathan Expósito Martín
                          |          
                          br
                          |          
                          a(href='https://gcpmendez.github.io', target='_blank')
                            | Germ&aacute;n Paz M&eacute;ndez
                            // Sergio J. Rodríguez Martín
                        //
                          <br>
                          <a href="https://pr3pl1415.herokuapp.com/tests/">Tests</a>
                          <br>
                          <a href="http://en.wikipedia.org/wiki/Comma-separated_values">Wikipedia</a>
                        br
            br
            |          
            |          
            |          
            |          
            |          
            br
            |          
            h4
              a(href='http://gcpmendez.github.io/PL1415/')
                b &lt;&lt;&lt;
          // /col-md-8
        // /row
      // /.container
      .container.mt
        .row.clients.centered
          p.mb Escuela T&eacute;cnica Superior de Ingenier&iacute;a Inform&aacute;tica - ULL
        // /row
      // /container
      // /.G
      // Placed at the end of the document so the pages load faster
      script(src='assets/js/jquery.min.js')
      script(src='assets/js/bootstrap.min.js')
      script(src='assets/js/retina-1.1.0.js')
      script(src='assets/js/jquery.hoverdir.js')
      script(src='assets/js/jquery.hoverex.min.js')
      script(src='assets/js/jquery.prettyPhoto.js')
      script(src='assets/js/jquery.isotope.min.js')
      script(src='assets/js/custom.js')
      script.
        // Portfolio
        (function($) {
        "use strict";
        var $container = $('.portfolio'),
        $items = $container.find('.portfolio-item'),
        portfolioLayout = 'fitRows';
        if( $container.hasClass('portfolio-centered') ) {
        portfolioLayout = 'masonry';
        }
        $container.isotope({
        filter: '*',
        animationEngine: 'best-available',
        layoutMode: portfolioLayout,
        animationOptions: {
        duration: 750,
        easing: 'linear',
        queue: false
        },
        masonry: {
        }
        }, refreshWaypoints());
        function refreshWaypoints() {
        setTimeout(function() {
        }, 1000);
        }
        $('nav.portfolio-filter ul a').on('click', function() {
        var selector = $(this).attr('data-filter');
        $container.isotope({ filter: selector }, refreshWaypoints());
        $('nav.portfolio-filter ul a').removeClass('active');
        $(this).addClass('active');
        return false;
        });
        function getColumnNumber() {
        var winWidth = $(window).width(),
        columnNumber = 1;
        if (winWidth > 1200) {
        columnNumber = 5;
        } else if (winWidth > 950) {
        columnNumber = 4;
        } else if (winWidth > 600) {
        columnNumber = 3;
        } else if (winWidth > 400) {
        columnNumber = 2;
        } else if (winWidth > 250) {
        columnNumber = 1;
        }
        return columnNumber;
        }
        function setColumns() {
        var winWidth = $(window).width(),
        columnNumber = getColumnNumber(),
        itemWidth = Math.floor(winWidth / columnNumber);
        $container.find('.portfolio-item').each(function() {
        $(this).css( {
        width : itemWidth + 'px'
        });
        });
        }
        function setPortfolio() {
        setColumns();
        $container.isotope('reLayout');
        }
        $container.imagesLoaded(function () {
        setPortfolio();
        });
        $(window).on('resize', function () {
        setPortfolio();
        });
        })(jQuery);
